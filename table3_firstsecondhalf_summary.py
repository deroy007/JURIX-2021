import sys
import os
#variable initialization
uu=0
v4=[]
v5=[]
v6=[]
v7=[]
count=0
countf=0
counta=0
countr=0
countp=0
countr1=0
countr2=0
counti=0
counts=0
first=0
last=0
second=0
first1=0
last1=0
k1=0.0
k2=0.0
k3=0.0
k4=0.0
k5=0.0
k6=0.0
k7=0.0
k8=0.0
first1=0.0
last1=0.0
second1=0.0
second2=0.0
first2=0.0
last2=0.0
first3=0.0
last3=0.0

#list of all possible summarization algorithms
a=["BERT","CaseSummarizer","ChineseGist","DELSumm","DSDR","KMM","LetSum","LexRankSummarizer","LsaSummarizer","LuhnSummarizer","MMR","ReductionSummarizer","SummaRuNNer/AttnRNN_F7_avr","SummaRuNNer/RNN_RNN_F7_avr","SummaRuNNer/CNN_RNN_F7_avr"]
t=os.listdir("Full-Text-segments/India/")

#loop over all summarization algorithms
for j in range(0,15):

	#loop over all 50 files
	for i in range(0,len(t)):

			#open a particular file and read
			file1 = open("Algo-Summaries/India/"+a[j]+'/'+t[i], 'r')
			Lines = file1.readlines()

			v=[]
			v1=[]
			p=""
			count = 0

			# read a line from a summarized document where the summarized text is generated by a algorithm 
			for line in Lines:
				p=line.strip()
				if p[-1]==".":
					v.append(p[:-1])
				else:
					v.append(p)
			

			#read a line from a file in the full text segments		
			file1 = open("Full-Text-segments/India/"+t[i], 'r')
			Lines = file1.readlines()
 
			count = 0
			
			#read a line from a file in the full text segments
			for line in Lines:
				p=line.strip()
				if p[-1]==".":
					v1.append(p[:-1])
				else:
					v1.append(p)
			


			#separate a line into sentence and label
			for l in range(0,len(v1)):
				u=v1[l]
				u=u.split("-->")
				u[0]=u[0].strip()
				if u[0][-1]==".":
					v4.append(u[0][:-1])
				else:
					v4.append(u[0])
				
				v5.append(u[1])
			#v4 contains sentence
			#v5 contains label
			
			
			#remove the punctuation characters and only store only alphanumeric characters
			for x1 in range(0,len(v)):
				a_string=v[x1]
				alphanumeric=""
				for character in a_string:
					if character.isalnum():
						alphanumeric+=character
				v6.append(alphanumeric)

			#remove the punctuation characters and only store only alphanumeric characters
			for x2 in range(0,len(v4)):
				a_string=v4[x2]
				alphanumeric=""
				for character in a_string:
					if character.isalnum():
						alphanumeric+=character
				v7.append(alphanumeric)

			#check whether the line present in the summary file is present in the first half or the second half of the text file
			for x1 in range(0,len(v6)):
				for x2 in range(0,len(v7)):
					if v6[x1]==v7[x2]:
						count=count+1
						if x2<=(len(v7)/2):
							first=first+1
						#elif x2>(len(v7)/3) and x2<=(2*len(v7)/3):
						#	second=second+1
						else:
							last=last+1
	
			
			count=0
			v4=[]
			v5=[]
			v6=[]
			v7=[]
			v=[]
			v1=[]
			
			first1=(first*1.0)/(first+second+last)
			second1=(second*1.0)/(first+second+last)
			last1=(last*1.0)/(first+second+last)

			#print the portion of the file which is in the first half and part of the file which is in the second half
		#	if t[i]=="1953_L_1.txt":
		#		print("Method name:-",a[j])
		#		print("Portion in the first half="+str(first1))
		#		print("Portion in the second half="+str(last1))
		#		
		#		print("-------------------------------------")
			first2=first2+first1
			second2=second2+second1
			last2=last2+last1

			
			first1=0.0
			second1=0.0
			last1=0.0
			first=0.0
			second=0.0
			last=0.0



	#print the portion of the file which is in the first half and part of the file which is in the second half
	print("Method name:-",a[j])
	print("Portion in the first half="+str(first2/50.0))
	print("Portion in the second half="+str(second2/50.0))
	print("Portion in the last half="+str(last2/50.0))
	print((first2/50.0)+(last2/50.0)+(second2/50.0))
	print("-------------------------------------")
	first2=0.0
	second2=0.0
	last2=0.0
